// width : 1280 - 30 = 1250px
// Grid System (160 [unit(130) + gutter(15)], 8 columns)
// base font-size : 8px
// base leading-ratio : 1.5 // 18 * 1.5 = 27px
// gutter-direction : after // margin-right ì‚¬ìš©


// 기존 css -> Sass 
// 몇 개 컬럼, unit, gutter비율, gutter를 넣을것인가

$container-width: 1280px;
$column-num: 8;
$column-width: $container-width/$column-num;
$unit-width: 130px; 
$gutter-width: 30px; 
$leading: 27px;

$base-font-size: 18px;
$base-leading-ratio: $base-font-size * 1.5;


@function draw-column($hex, $alpha: 0.3) {
	@return linear-gradient(90deg, rgba($hex, $alpha) $location);
}

@function coulmnWidth($num) {
	@return $unit-width*$num + $gutter-width*($num - 1);
}

@function pushPull($num) {
	@return $column-width*$num;
}

/*grid-container Module*/
.grid-container {
	width: $container-width;
	margin-left: auto;
	margin-right: auto;
}

.grid-container.show-grid::before,
.grid-container.show-grid-before::before,
.grid-container.show-grid-split::before {
	width: $container-width - $gutter-width;
	content: '';
	position: absolute;
	z-index: 1000;
	top: 0;
	left: 50%;
	transform: translateX(-50%);
	height: 100vh;
}

.grid-container.show-grid::before {
	background: hsla(60, 50%, 50%, 0.3);
	background: 
		linear-gradient(90deg, rgba(191, 64, 64, 0.3) 81%, rgba(0,0,0,0) 81%),
		linear-gradient(transparent 26px, #26923f 1px);
	background-size: 
		$column-width 1px,
		1px $leading;
}

.grid-container.show-grid-before::before {
	background: hsla(60, 50%, 50%, 0.3);
	background: 
		linear-gradient(90deg, rgba(0,0,0,0) 30px, rgba(191, 64, 64, 0.3) 30px),
		linear-gradient(transparent 26px, #26923f 1px);
	background-size: 
		$column-width 1px,
		1px $leading;
}

.grid-container.show-grid-split::before {
	background: hsla(60, 50%, 50%, 0.3);
	background: 
		linear-gradient(90deg, rgba(0,0,0,0) 15px, rgba(191, 64, 64, 0.3) 15px, rgba(191, 64, 64, 0.3) 145px, rgba(0,0,0,0) 145px, rgba(0,0,0,0) 160px),
		linear-gradient(transparent 26px, #26923f 1px);
	background-size: 
		$column-width 1px,
		1px $leading;
}

/*grid Module*/
.grid::after {
	content: '';
	display: block;
	clear: both;
}

/*unit Module*/
[class*="unit-"] {
	float: left;
	margin-left: 15px;
	margin-right: 15px;
}

.grid .last, .grid .omega { margin-right: 0; }


$i: 1;

@while $i <= $column-num {
	.unit-#{$i} { width: coulmnWidth($i); }
	$i: $i + 1;
}

/*
push, pull Module : using position: relative;
*/
.grid [class*="push-"],
.grid [class*="pull-"] {
	position: relative;
}

.push-1 { left: pushPull(1); }
.push-2 { left: pushPull(2); }
.push-3 { left: pushPull(3); }
.push-4 { left: pushPull(4); }
.push-5 { left: pushPull(5); }
.push-6 { left: pushPull(6); }
.push-7 { left: pushPull(7); }
.push-8 { left: pushPull(8); }

/*
pull
*/
.pull-1 { right: pushPull(1); }
.pull-2 { right: pushPull(2); }
.pull-3 { right: pushPull(3); }
.pull-4 { right: pushPull(4); }
.pull-5 { right: pushPull(5); }
.pull-6 { right: pushPull(6); }
.pull-7 { right: pushPull(7); }
.pull-8 { right: pushPull(8); }

/*
prefix, suffix Module : float -> margin, padding
margin or padding 
*/
.prefix-1 { margin-left: 160px; }
.prefix-2 { margin-left: 320px; }
.prefix-3 { margin-left: 480px; }
.prefix-4 { margin-left: 640px; }
.prefix-5 { margin-left: 800px; }
.prefix-6 { margin-left: 960px; }
.prefix-7 { margin-left: 1120px; }
.prefix-8 { margin-left: 1280px; }

.suffix-1 { margin-right: 160px; }
.suffix-2 { margin-right: 320px; }
.suffix-3 { margin-right: 480px; }
.suffix-4 { margin-right: 640px; }
.suffix-5 { margin-right: 800px; }
.suffix-6 { margin-right: 960px; }
.suffix-7 { margin-right: 1120px; }
.suffix-8 { margin-right: 1280px; }